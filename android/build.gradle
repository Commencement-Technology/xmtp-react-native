buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["Xmtp_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: 'maven-publish'

 if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
 }

// Creating sources with comments
//if (GradleVersion.current() < GradleVersion.version('8.0')) {
//    task androidSourcesJar(type: Jar) {
//      classifier  = 'sources'
//      from android.sourceSets.main.java.srcDirs
//    }
//} else {
//    task androidSourcesJar(type: Jar) {
//      archiveClassifier = 'sources'
//      from android.sourceSets.main.java.srcDirs
//    }
//}
//
//afterEvaluate {
//  publishing {
//    publications {
//      release(MavenPublication) {
//        from components.release
//        // Add additional sourcesJar to artifacts
//        artifact(androidSourcesJar)
//      }
//    }
//    repositories {
//      maven {
//        url = mavenLocal().url
//      }
//    }
//  }
//}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["Xmtp_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["Xmtp_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.xmtpreactnativesdk"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    versionCode 1
    versionName "0.1.0"
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    abortOnError false
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  google()
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // TODO:
  // implementation 'com.facebook.react:react-native:0.71.3'
  implementation "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation "org.xmtp:android:0.9.0"
  implementation 'com.google.code.gson:gson:2.10.1'
  implementation "com.daveanthonythomas.moshipack:moshipack:1.0.1"
}
